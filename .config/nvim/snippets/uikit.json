{
	"_uirfc": {
		"prefix": "_uirfc",
		"body": [
			"/** @jsx jsx */",
			"import { css, jsx } from '@emotion/react'",
			"import React from 'react'",
			"import useTheme, { Theme } from '@/theme/useTheme'",
			"import clsx from 'clsx'",
			"import useStyles from '@/utils/useStyles'",
			"import useClasses from '@/utils/useClasses'",
			"",
			"type ${TM_FILENAME_BASE}Slot = 'root'",
			"type ${TM_FILENAME_BASE}SlotTag = ${TM_FILENAME_BASE}Slot",
			"",
			"const getActiveSlots = (props: ${TM_FILENAME_BASE}Props) => {",
			"  return {",
			"    root: ['root'],",
			"  }",
			"}",
			"",
			"export interface ${TM_FILENAME_BASE}Props extends React.ComponentPropsWithoutRef<'div'> {",
			"  /**",
			"   * The content of the component.",
			"   */",
			"  children?: React.ReactNode",
			"  /**",
			"   * Override or extend the styles applied to the component.",
			"   */",
			"  classes?: Partial<Record<${TM_FILENAME_BASE}SlotTag, string>>",
			"  /**",
			"   * Object of styles to apply to the component.",
			"   */",
			"  styles?: Partial<Record<${TM_FILENAME_BASE}SlotTag, React.CSSProperties>>",
			"}",
			"",
			"type ${TM_FILENAME_BASE}OwnerState = ${TM_FILENAME_BASE}Props",
			"// & Required<Pick<${TM_FILENAME_BASE}Props, ''>>",
			"",
			"/**",
			" * ${1:Description}",
			" */",
			"const ${TM_FILENAME_BASE} = React.forwardRef<HTMLDivElement, ${TM_FILENAME_BASE}Props>(function ${TM_FILENAME_BASE}(props, ref) {",
			"  const theme = useTheme()",
			"  const { children, classes: classesProp, styles: stylesProp, ...otherProps } = props",
			"  const ownerState: ${TM_FILENAME_BASE}OwnerState = {",
			"    ...props,",
			"  }",
			"  const styles = useStyles(getActiveSlots(ownerState), stylesProp)",
			"  const classes = useClasses(getActiveSlots(ownerState), classesProp)",
			"  return (",
    	"    <div",
			"      ref={ref}",
			"      css={rootStyle({ ownerState, theme, styles })}",
			"      className={clsx(classes.root)}",
			"      {...otherProps}",
			"    >",
      "      {children}",
    	"    </div>",
  		"  )",
			"})",
			"",
			"export default ${TM_FILENAME_BASE}",
			"",
			"const rootStyle = ({",
			"  ownerState,",
			"  theme,",
			"  styles,",
			"}: {",
			"  ownerState: ${TM_FILENAME_BASE}OwnerState",
			"  theme: Theme",
			"  styles: Partial<Record<${TM_FILENAME_BASE}Slot, React.CSSProperties>>",
			"}) =>",
			"  css({",
			"    // CORE STYLES",
			"    // CUSTOM STYLES",
			"    ...styles.root,",
			"  })",
			""
		],
    "description": "UI Kit component"
	},
}
